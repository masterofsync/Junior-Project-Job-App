@model WcfAESJobs.Client.Models.ApplicationModel

@{
    ViewBag.Title = "Apply";
}

<style>
     a {
        text-decoration: none;
    }

    .panel-heading span {
        margin-top: -20px;
        font-size: 15px;
    }

    .row {
        margin-top: 0px;
        padding: 0 10px;
    }

    .clickable {
        cursor: pointer;
    }
    textarea {
        resize: none;
    }
        textarea.input-validation-error {
            border-color: red;
        }
 
</style>

<div>
    <div class="curveunderheader"><span class="glyphicon glyphicon-folder-open"></span>&nbsp;&nbsp;Apply</div>
</div>

<br />
@using (Html.BeginForm(new { Posting_ID = ViewBag.Posting_ID,id="forms" }))
{
    <div class="row">
        <div class="col-md-12">
            <div class="panel panel-info">
                <div class="panel-heading clickable">
                    <h3 class="panel-title"><b>Application Questions</b></h3>
                    <span class="pull-right clickable"><i class="glyphicon glyphicon-chevron-up"></i></span>
                </div>
                <div class="panel-body">

                    <table class="table table-striped">
                        <tr>
                            <th>
                                Questions
                            </th>
                            <th>
                                Answers
                            </th>
                            <th></th>
                        </tr>

                        @for (int i = 0; i < Model.ApplicationQuestions.Count; i++)
                        {
                            <div class="form-group">
                                <tr>
                                    <td>
                                        @Html.DisplayFor(m => Model.ApplicationQuestions[i].fullQuestion)
                                        @Html.HiddenFor(m => Model.ApplicationQuestions[i].questionID)
                                        @Html.HiddenFor(m => Model.ApplicationQuestions[i].fullQuestion)
                                    </td>
                                    <td>
                                        @Html.TextAreaFor(m => Model.ApplicationQuestions[i].answer, new { @class = "form-control", @required = "required", rows = "6", cols = "20", maxlength = "249" })
                                        @Html.ValidationMessageFor(m => Model.ApplicationQuestions[i].answer)
                                    </td>
                                </tr>
                            </div>
                        }
                    </table>

                </div>
            </div>
        </div>
    </div>


    <div class="row">
        <div class="col-md-12">
            <div class="panel panel-info">
                <div class="panel-heading clickable">
                    <h3 class="panel-title"><b>Basic Qualification Questions</b></h3>
                    <span class="pull-right clickable"><i class="glyphicon glyphicon-chevron-up"></i></span>
                </div>
                <div class="panel-body">
                    <table class="table table-striped">
                        <tr>
                            <th>
                                Question
                            </th>
                            <th>
                                Answer
                            </th>
                            <th></th>
                        </tr>

                        @for (int i = 0; i < Model.PreApplicationQuestions.Count; i++)
                        {
                            <div class="form-group">
                                <tr>
                                    <td>
                                        @Html.DisplayFor(m => Model.PreApplicationQuestions[i].fullQuestion)
                                        @Html.HiddenFor(m => Model.PreApplicationQuestions[i].questionID)
                                    </td>
                                    <td>
                                        @Html.RadioButtonFor(m => Model.PreApplicationQuestions[i].answer, "Yes", new { @checked = true }) Yes
                                        @Html.RadioButtonFor(m => Model.PreApplicationQuestions[i].answer, "No") No
                                        @Html.ValidationMessageFor(m => Model.PreApplicationQuestions[i].answer)
                                    </td>
                                </tr>
                            </div>
                        }
                    </table>

                </div>
            </div>
        </div>
    </div>
    
    


    @Html.AntiForgeryToken()
    <div class="form-group col-sm-12">
        <div>
            <input type="submit" value="Apply" id="submitApply" class="btn btn-default" />&nbsp;&nbsp;<form><input class="btn btn-default" type="button" value="Back" onclick="history.go(-1);return true;"></form>
        </div>
    </div>
}
    @*
    
}   
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>ApplicationModel</h4>
        <hr />
        
    </div>
        
}*@

@*@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>QuestionForm</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        

            @for (var i = 0; i < Model.Count; i++)
            {
                <div class="form-group">
                    <tr>
                        <td>

                            @Html.DisplayFor(x => Model[i].questionID)
                            @Html.HiddenFor(x => Model[i].questionID)
                        </td>

                        <td>
                            @Html.EditorFor(x => Model[i].answer)
                        </td>
                        <br />
                        <br />
                    </tr>
                </div>
            }

                

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save Changes" class="btn btn-default" />
            </div>
        </div>
    </div>
}
    *@

@*@using (Html.BeginForm(new { ApplicantID = 5}))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>QuestionForm</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">

            @for (var i = 0; i < Model.Count; i++)
            {
                <tr>
                    <td>
                        @Html.HiddenFor(x => x[i].questionID)
                        @Html.DisplayFor(x => x[i].questionID)
                    </td>

                    <td>
                        @Html.EditorFor(x => x[i].answer)
                    </td>
                    <br />
                    <br />
                </tr>
            }

        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save Changes" class="btn btn-default" />
            </div>
        </div>
    </div>
}*@

<div class="col-sm-12">
    @*@Html.ActionLink("Back to List", "Index",null,new{@class="btn-default btn"})*@
   
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
<script type="text/javascript">
    $('#submitApply').click(function () {
        $('.panel-heading').each(function () {
            $(this).parents('.panel').find('.panel-body').slideDown();
            $(this).removeClass("panel-collapsed");
            $(this).find('i').removeClass('glyphicon-chevron-down').addClass('glyphicon-chevron-up');
        });
        if($('#forms').val())
        {
            $('#forms').submit();
        }
    });
    jQuery(function ($) {
        $('.panel-heading').on("click", function (e) {
            if ($(this).hasClass('panel-collapsed')) {
                // expand the panel
                $(this).parents('.panel').find('.panel-body').slideDown();
                $(this).removeClass('panel-collapsed');
                $(this).find('i').removeClass('glyphicon-chevron-down').addClass('glyphicon-chevron-up');
            }
            else {
                // collapse the panel
                $(this).parents('.panel').find('.panel-body').slideUp();
                $(this).addClass('panel-collapsed');
                $(this).find('i').removeClass('glyphicon-chevron-up').addClass('glyphicon-chevron-down');
            }
        });
    });
</script>
}
