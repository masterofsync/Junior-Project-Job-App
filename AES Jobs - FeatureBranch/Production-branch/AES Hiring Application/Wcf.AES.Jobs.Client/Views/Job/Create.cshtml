@model WcfAESJobs.Client.Models.JobCreate

@{
    ViewBag.Title = "Create";
}
<style>
    textarea {
        resize: none;
    }
</style>

<div class="curveunderheader"><span class="glyphicon glyphicon-folder-open"></span>&nbsp;&nbsp;Create Job Template</div>
<br />


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.Label("Title", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.template.title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.template.title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Description", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.template.description, new { @class = "form-control", rows = "6", cols = "10" })
                @Html.ValidationMessageFor(model => model.template.description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Qualification", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.template.qualifications, new { @class = "form-control", rows = "6", cols = "10" })
                @Html.ValidationMessageFor(model => model.template.qualifications, "", new { @class = "text-danger" })
            </div>
        </div>
        <br />
        
        <div class="form-group col-sm-12">

            <div class="col-md-2"></div>
            <div class="col-md-4">
                
                @Html.Label("Application Questions") <br />
                @for (var i = 0; i < Model.ApplicationQuestions.Count; i++)
                {
                    <p>
                        @Html.HiddenFor(x => Model.ApplicationQuestions[i].question.QuestionID)
                        @Html.CheckBoxFor(x => Model.ApplicationQuestions[i].checkedQuestion)
                        &nbsp; &nbsp;
                        @Html.DisplayFor(x => Model.ApplicationQuestions[i].question.QuestionTitle)
                    </p>

                }
               

            </div>
            <div class="col-md-6">
                    
                @Html.Label("Phone Questions") <br />
                @for (var i = 0; i < Model.PhoneQuestions.Count; i++)
                {
                    <p>
                        @Html.HiddenFor(x => Model.PhoneQuestions[i].question.QuestionID)
                        @Html.CheckBoxFor(x => Model.PhoneQuestions[i].checkedQuestion)
                        &nbsp; &nbsp;
                        @Html.DisplayFor(x => Model.PhoneQuestions[i].question.QuestionTitle)
                    </p>

                }
            </div>
        </div>
        <br />
       

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index", null,new{@class="btn btn-default"})
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
